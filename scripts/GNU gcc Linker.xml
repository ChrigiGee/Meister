<?xml version="1.0"?>
<CompilerLinker><Name>GNU gcc Compiler</Name><Groups><GroupName>Options for cpp</GroupName><Flags><Flag>-include &lt;file&gt;</Flag><ShortDesc>Include the contents of &lt;file&gt; before other files</ShortDesc></Flags><Flags><Flag>-imacros &lt;file&gt;</Flag><ShortDesc>Accept definition of marcos in &lt;file&gt;</ShortDesc></Flags><Flags><Flag>-iprefix &lt;path&gt;</Flag><ShortDesc>Specify &lt;path&gt; as a prefix for next two options</ShortDesc></Flags><Flags><Flag>-iwithprefix &lt;dir&gt;</Flag><ShortDesc>Add &lt;dir&gt; to the end of the system include paths</ShortDesc></Flags><Flags><Flag>-iwithprefixbefore &lt;dir&gt;</Flag><ShortDesc>Add &lt;dir&gt; to the end of the main include paths</ShortDesc></Flags><Flags><Flag>-isystem &lt;dir&gt;</Flag><ShortDesc>Add &lt;dir&gt; to the start of the system include paths</ShortDesc></Flags><Flags><Flag>-idirafter &lt;dir&gt;</Flag><ShortDesc>Add &lt;dir&gt; to the end of the system include paths</ShortDesc></Flags><Flags><Flag>-I &lt;dir&gt;</Flag><ShortDesc>Add &lt;dir&gt; to the end of the main include paths</ShortDesc></Flags><Flags><Flag>-nostdinc</Flag><ShortDesc>Do not search the system include directories</ShortDesc></Flags><Flags><Flag>-nostdinc++</Flag><ShortDesc>Do not search the system include directories for C++</ShortDesc></Flags><Flags><Flag>-o &lt;file&gt;</Flag><ShortDesc>Put output into &lt;file&gt;</ShortDesc></Flags><Flags><Flag>-pedantic</Flag><ShortDesc>Issue all warnings demanded by strict ANSI C</ShortDesc></Flags><Flags><Flag>-traditional</Flag><ShortDesc>Follow K&amp;R pre-processor behaviour</ShortDesc></Flags><Flags><Flag>-trigraphs</Flag><ShortDesc>Support ANSI C trigraphs</ShortDesc></Flags><Flags><Flag>-lang-c</Flag><ShortDesc>Assume that the input sources are in C</ShortDesc></Flags><Flags><Flag>-lang-c89</Flag><ShortDesc>Assume that the input sources are in C89</ShortDesc></Flags><Flags><Flag>-lang-c++</Flag><ShortDesc>Assume that the input sources are in C++</ShortDesc></Flags><Flags><Flag>-lang-objc</Flag><ShortDesc>Assume that the input sources are in ObjectiveC</ShortDesc></Flags><Flags><Flag>-lang-objc++</Flag><ShortDesc>Assume that the input sources are in ObjectiveC++</ShortDesc></Flags><Flags><Flag>-lang-asm</Flag><ShortDesc>Assume that the input sources are in assembler</ShortDesc></Flags><Flags><Flag>-lang-chill</Flag><ShortDesc>Assume that the input sources are in Chill</ShortDesc></Flags><Flags><Flag>-+</Flag><ShortDesc>Allow parsing of C++ style features</ShortDesc></Flags><Flags><Flag>-w</Flag><ShortDesc>Inhibit warning messages</ShortDesc></Flags><Flags><Flag>-Wtrigraphs</Flag><ShortDesc>Warn if trigraphs are encountered</ShortDesc></Flags><Flags><Flag>-Wno-trigraphs</Flag><ShortDesc>Do not warn about trigraphs</ShortDesc></Flags><Flags><Flag>-Wcomments</Flag><ShortDesc>Warn if one comment starts inside another</ShortDesc></Flags><Flags><Flag>-Wno-comments</Flag><ShortDesc>Do not warn about comments</ShortDesc></Flags><Flags><Flag>-Wtraditional</Flag><ShortDesc>Warn if a macro argument is/would be turned into a string if -tradtional is specified</ShortDesc></Flags><Flags><Flag>-Wno-traditional</Flag><ShortDesc>Do not warn about stringification</ShortDesc></Flags><Flags><Flag>-Wundef</Flag><ShortDesc>Warn if an undefined macro is used by #if</ShortDesc></Flags><Flags><Flag>-Wno-undef</Flag><ShortDesc>Do not warn about testing udefined macros</ShortDesc></Flags><Flags><Flag>-Wimport</Flag><ShortDesc>Warn about the use of the #import directive</ShortDesc></Flags><Flags><Flag>-Wno-import</Flag><ShortDesc>Do not warn about the use of #import</ShortDesc></Flags><Flags><Flag>-Werror</Flag><ShortDesc>Treat all warnings as errors</ShortDesc></Flags><Flags><Flag>-Wno-error</Flag><ShortDesc>Do not treat warnings as errors</ShortDesc></Flags><Flags><Flag>-Wall</Flag><ShortDesc>Enable all preprocessor warnings</ShortDesc></Flags><Flags><Flag>-M</Flag><ShortDesc>Generate make dependencies</ShortDesc></Flags><Flags><Flag>-MM</Flag><ShortDesc>As -M, but ignore system header files</ShortDesc></Flags><Flags><Flag>-MD</Flag><ShortDesc>As -M, but put output in a .d file</ShortDesc></Flags><Flags><Flag>-MMD</Flag><ShortDesc>As -MD, but ignore system header files</ShortDesc></Flags><Flags><Flag>-MG</Flag><ShortDesc>Treat missing header file as generated files</ShortDesc></Flags><Flags><Flag>-g</Flag><ShortDesc>Include #define and #undef directives in the output</ShortDesc></Flags><Flags><Flag>-D&lt;macro&gt;</Flag><ShortDesc>Define a &lt;macro&gt; with string &apos;1&apos; as its value</ShortDesc></Flags><Flags><Flag>-D&lt;macro&gt;=&lt;val&gt;</Flag><ShortDesc>Define a &lt;macro&gt; with &lt;val&gt; as its value</ShortDesc></Flags><Flags><Flag>-A&lt;question&gt; (&lt;answer&gt;)</Flag><ShortDesc>Assert the &lt;answer&gt; to &lt;question&gt;</ShortDesc></Flags><Flags><Flag>-U&lt;macro&gt;</Flag><ShortDesc>Undefine &lt;macro&gt;</ShortDesc></Flags><Flags><Flag>-u or -undef</Flag><ShortDesc>Do not predefine any macros</ShortDesc></Flags><Flags><Flag>-v</Flag><ShortDesc>Display the version number</ShortDesc></Flags><Flags><Flag>-H</Flag><ShortDesc>Print the name of header files as they are used</ShortDesc></Flags><Flags><Flag>-C</Flag><ShortDesc>Do not discard comments</ShortDesc></Flags><Flags><Flag>-dM</Flag><ShortDesc>Display a list of macro definitions active at end</ShortDesc></Flags><Flags><Flag>-dD</Flag><ShortDesc>Preserve macro definitions in output</ShortDesc></Flags><Flags><Flag>-dN</Flag><ShortDesc>As -dD except that only the names are preserved</ShortDesc></Flags><Flags><Flag>-dI</Flag><ShortDesc>Include #include directives in the output</ShortDesc></Flags><Flags><Flag>-ifoutput</Flag><ShortDesc>Describe skipped code blocks in output</ShortDesc></Flags><Flags><Flag>-P</Flag><ShortDesc>Do not generate #line directives</ShortDesc></Flags><Flags><Flag>-$</Flag><ShortDesc>Do not include &apos;$&apos; in identifiers</ShortDesc></Flags><Flags><Flag>-remap</Flag><ShortDesc>Remap file names when including files.</ShortDesc></Flags><Flags><Flag>-h or --help</Flag><ShortDesc>Display help information</ShortDesc></Flags></Groups><Groups><GroupName>Options for cc1</GroupName><Flags><Flag>-ffixed-&lt;register&gt;</Flag><ShortDesc>Mark &lt;register&gt; as being unavailable to the compiler</ShortDesc></Flags><Flags><Flag>-fcall-used-&lt;register&gt;</Flag><ShortDesc>Mark &lt;register&gt; as being corrupted by function calls</ShortDesc></Flags><Flags><Flag>-fcall-saved-&lt;register&gt;</Flag><ShortDesc>Mark &lt;register&gt; as being preserved across functions</ShortDesc></Flags><Flags><Flag>-fprefix-function-name</Flag><ShortDesc>Add a prefix to all function names</ShortDesc></Flags><Flags><Flag>-fcheck-memory-usage</Flag><ShortDesc>Generate code to check every memory access</ShortDesc></Flags><Flags><Flag>-fstrict-aliasing</Flag><ShortDesc>Assume strict aliasing rules apply</ShortDesc></Flags><Flags><Flag>-fargument-noalias-global</Flag><ShortDesc>Assume arguments do not alias each other or globals</ShortDesc></Flags><Flags><Flag>-fargument-noalias</Flag><ShortDesc>Assume arguments may alias globals but not each other</ShortDesc></Flags><Flags><Flag>-fargument-alias</Flag><ShortDesc>Specify that arguments may alias each other &amp; globals</ShortDesc></Flags><Flags><Flag>-fstack-check</Flag><ShortDesc>Insert stack checking code into the program</ShortDesc></Flags><Flags><Flag>-fpack-struct</Flag><ShortDesc>Pack structure members together without holes</ShortDesc></Flags><Flags><Flag>-fregmove</Flag><ShortDesc>Enables a regoster move optimisation</ShortDesc></Flags><Flags><Flag>-fgnu-linker</Flag><ShortDesc>Output GNU ld formatted global initialisers</ShortDesc></Flags><Flags><Flag>-fverbose-asm</Flag><ShortDesc>Add extra commentry to assembler output</ShortDesc></Flags><Flags><Flag>-ffunction-sections</Flag><ShortDesc>place each function into its own section</ShortDesc></Flags><Flags><Flag>-finhibit-size-directive</Flag><ShortDesc>Do not generate .size directives</ShortDesc></Flags><Flags><Flag>-fcommon</Flag><ShortDesc>Do not put unitialised globals in the common section</ShortDesc></Flags><Flags><Flag>-ffast-math</Flag><ShortDesc>Improve FP speed by violating ANSI &amp; IEEE rules</ShortDesc></Flags><Flags><Flag>-fbranch-probabilities</Flag><ShortDesc>Use profiling information for branch porbabilities</ShortDesc></Flags><Flags><Flag>-ftest-coverage</Flag><ShortDesc>Create data files needed by gcov</ShortDesc></Flags><Flags><Flag>-fprofile-arcs</Flag><ShortDesc>Insert arc based program profiling code</ShortDesc></Flags><Flags><Flag>-fasynchronous-exceptions</Flag><ShortDesc>Support asynchronous exceptions</ShortDesc></Flags><Flags><Flag>-fsjlj-exceptions</Flag><ShortDesc>Use setjmp/longjmp to handle exceptions</ShortDesc></Flags><Flags><Flag>-fnew-exceptions</Flag><ShortDesc>Use the new model for exception handling</ShortDesc></Flags><Flags><Flag>-fexceptions</Flag><ShortDesc>Enable exception handling</ShortDesc></Flags><Flags><Flag>-fpic</Flag><ShortDesc>Generate position independent code, if possible</ShortDesc></Flags><Flags><Flag>-fschedule-insns2</Flag><ShortDesc>Run two passes of the instruction scheduler</ShortDesc></Flags><Flags><Flag>-fschedule-insns</Flag><ShortDesc>Reschedule instructions to avoid pipeline stalls</ShortDesc></Flags><Flags><Flag>-fpretend-float</Flag><ShortDesc>Pretend that host and target use the same FP format</ShortDesc></Flags><Flags><Flag>-frerun-loop-opt</Flag><ShortDesc>Run the loop optimiser twice</ShortDesc></Flags><Flags><Flag>-fstructure-noalias</Flag><ShortDesc>Assume structure / array reference and fixed scalar cannot alias</ShortDesc></Flags><Flags><Flag>-frerun-cse-after-loop</Flag><ShortDesc>Run CSE pass after loop optimisations</ShortDesc></Flags><Flags><Flag>-fgcse</Flag><ShortDesc>Perform the global common subexpression elimination</ShortDesc></Flags><Flags><Flag>-fdelayed-branch</Flag><ShortDesc>Attempt to fill delay slots of branch instructions</ShortDesc></Flags><Flags><Flag>-freg-struct-return</Flag><ShortDesc>Return &apos;short&apos; aggregates in registers</ShortDesc></Flags><Flags><Flag>-fpcc-struct-return</Flag><ShortDesc>Return &apos;short&apos; aggregates in memory, not registers</ShortDesc></Flags><Flags><Flag>-fcaller-saves</Flag><ShortDesc>Enable saving registers around function calls</ShortDesc></Flags><Flags><Flag>-fshared-data</Flag><ShortDesc>Mark data as shared rather than private</ShortDesc></Flags><Flags><Flag>-fsyntax-only</Flag><ShortDesc>Check for syntax errors, then stop</ShortDesc></Flags><Flags><Flag>-fkeep-static-consts</Flag><ShortDesc>Emit static const variables even if they are not used</ShortDesc></Flags><Flags><Flag>-finline</Flag><ShortDesc>Pay attention to the &apos;inline&apos; keyword</ShortDesc></Flags><Flags><Flag>-fkeep-inline-functions</Flag><ShortDesc>Generate code for funcs even if they are fully inlined</ShortDesc></Flags><Flags><Flag>-finline-functions</Flag><ShortDesc>Integrate simple functions into their callers</ShortDesc></Flags><Flags><Flag>-ffunction-cse</Flag><ShortDesc>Allow function addresses to be held in registers</ShortDesc></Flags><Flags><Flag>-fforce-addr</Flag><ShortDesc>Copy memory address constants into regs before using</ShortDesc></Flags><Flags><Flag>-fforce-mem</Flag><ShortDesc>Copy memory operands into registers before using</ShortDesc></Flags><Flags><Flag>-fpeephole</Flag><ShortDesc>Enable machine specific peephole optimisations</ShortDesc></Flags><Flags><Flag>-fwritable-strings</Flag><ShortDesc>Store strings in writable data section</ShortDesc></Flags><Flags><Flag>-freduce-all-givs</Flag><ShortDesc>Strength reduce all loop general induction variables</ShortDesc></Flags><Flags><Flag>-fmove-all-movables</Flag><ShortDesc>Force all loop invariant computations out of loops</ShortDesc></Flags><Flags><Flag>-funroll-all-loops</Flag><ShortDesc>Perform loop unrolling for all loops</ShortDesc></Flags><Flags><Flag>-funroll-loops</Flag><ShortDesc>Perform loop unrolling when interation count is known</ShortDesc></Flags><Flags><Flag>-fstrength-reduce</Flag><ShortDesc>Perform strength reduction optimisations</ShortDesc></Flags><Flags><Flag>-fthread-jumps</Flag><ShortDesc>Perform jump threading optimisations</ShortDesc></Flags><Flags><Flag>-fexpensive-optimizations</Flag><ShortDesc>Perform a number of minor, expensive optimisations</ShortDesc></Flags><Flags><Flag>-fcse-skip-blocks</Flag><ShortDesc>When running CSE, follow conditional jumps</ShortDesc></Flags><Flags><Flag>-fcse-follow-jumps</Flag><ShortDesc>When running CSE, follow jumps to their targets</ShortDesc></Flags><Flags><Flag>-fomit-frame-pointer</Flag><ShortDesc>When possible do not generate stack frames</ShortDesc></Flags><Flags><Flag>-fdefer-pop</Flag><ShortDesc>Defer popping functions args from stack until later</ShortDesc></Flags><Flags><Flag>-fvolatile-global</Flag><ShortDesc>Consider all mem refs to global data to be volatile</ShortDesc></Flags><Flags><Flag>-fvolatile</Flag><ShortDesc>Consider all mem refs through pointers as volatile</ShortDesc></Flags><Flags><Flag>-ffloat-store</Flag><ShortDesc>Do not store floats in registers</ShortDesc></Flags><Flags><Flag>-O[number]</Flag><ShortDesc>Set optimisation level to [number]</ShortDesc></Flags><Flags><Flag>-Os</Flag><ShortDesc>Optimise for space rather than speed</ShortDesc></Flags><Flags><Flag>-pedantic</Flag><ShortDesc>Issue warnings needed by strict compliance to ANSI C</ShortDesc></Flags><Flags><Flag>-pedantic-errors</Flag><ShortDesc>Like -pedantic except that errors are produced</ShortDesc></Flags><Flags><Flag>-w</Flag><ShortDesc>Suppress warnings</ShortDesc></Flags><Flags><Flag>-W</Flag><ShortDesc>Enable extra warnings</ShortDesc></Flags><Flags><Flag>-Winline</Flag><ShortDesc>Warn when an inlined function cannot be inlined</ShortDesc></Flags><Flags><Flag>-Wuninitialized</Flag><ShortDesc>Warn about unitialized automatic variables</ShortDesc></Flags><Flags><Flag>-Wcast-align</Flag><ShortDesc>Warn about pointer casts which increase alignment</ShortDesc></Flags><Flags><Flag>-Waggregate-return</Flag><ShortDesc>Warn about returning structures, unions or arrays</ShortDesc></Flags><Flags><Flag>-Wswitch</Flag><ShortDesc>Warn about enumerated switches missing a specific case</ShortDesc></Flags><Flags><Flag>-Wshadow</Flag><ShortDesc>Warn when one local variable shadows another</ShortDesc></Flags><Flags><Flag>-Wunused</Flag><ShortDesc>Warn when a variable is unused</ShortDesc></Flags><Flags><Flag>-Wid-clash-&lt;num&gt;</Flag><ShortDesc>Warn if 2 identifiers have the same first &lt;num&gt; chars</ShortDesc></Flags><Flags><Flag>-Wlarger-than-&lt;number&gt;</Flag><ShortDesc>Warn if an object is larger than &lt;number&gt; bytes</ShortDesc></Flags><Flags><Flag>-p</Flag><ShortDesc>Enable function profiling</ShortDesc></Flags><Flags><Flag>-a</Flag><ShortDesc>Enable block profiling</ShortDesc></Flags><Flags><Flag>-ax</Flag><ShortDesc>Enable jump profiling</ShortDesc></Flags><Flags><Flag>-o &lt;file&gt;</Flag><ShortDesc>Place output into &lt;file&gt;</ShortDesc></Flags><Flags><Flag>-G &lt;number&gt;</Flag><ShortDesc>Put global and static data smaller than &lt;number&gt; bytes into a special section (on some targets)</ShortDesc></Flags><Flags><Flag>-gdwarf-2</Flag><ShortDesc>Enable DWARF-2 debug output</ShortDesc></Flags><Flags><Flag>-gdwarf+</Flag><ShortDesc>Generated extended DWARF-1 format debug output</ShortDesc></Flags><Flags><Flag>-gdwarf</Flag><ShortDesc>Generate DWARF-1 format debug output</ShortDesc></Flags><Flags><Flag>-gstabs+</Flag><ShortDesc>Generate extended STABS format debug output</ShortDesc></Flags><Flags><Flag>-gstabs</Flag><ShortDesc>Generate STABS format debug output</ShortDesc></Flags><Flags><Flag>-ggdb</Flag><ShortDesc>Generate default extended debug format output</ShortDesc></Flags><Flags><Flag>-g</Flag><ShortDesc>Generate default debug format output</ShortDesc></Flags><Flags><Flag>-aux-info &lt;file&gt;</Flag><ShortDesc>Emit declaration info into &lt;file&gt;.X</ShortDesc></Flags><Flags><Flag>-quiet</Flag><ShortDesc>Do not display functions compiled or elapsed time</ShortDesc></Flags><Flags><Flag>-version</Flag><ShortDesc>Display the compiler&apos;s version</ShortDesc></Flags><Flags><Flag>-d[letters]</Flag><ShortDesc>Enable dumps from specific passes of the compiler</ShortDesc></Flags><Flags><Flag>-dumpbase &lt;file&gt;</Flag><ShortDesc>Base name to be used for dumps from specific passes</ShortDesc></Flags><Flags><Flag>-sched-verbose-&lt;number&gt;</Flag><ShortDesc>Set the verbosity level of the scheduler</ShortDesc></Flags><Flags><Flag>--help</Flag><ShortDesc>Display help information</ShortDesc></Flags></Groups><Groups><GroupName>Language specific options</GroupName><Flags><Flag>-ansi</Flag><ShortDesc>Compile just for ANSI C</ShortDesc></Flags><Flags><Flag>-fallow-single-precisio</Flag><ShortDesc>Do not promote floats to double if using -traditional</ShortDesc></Flags><Flags><Flag>-funsigned-bitfields</Flag><ShortDesc>Make bitfields by unsigned by default</ShortDesc></Flags><Flags><Flag>-fsigned-char</Flag><ShortDesc>Make &apos;char&apos; be signed by default</ShortDesc></Flags><Flags><Flag>-funsigned-char</Flag><ShortDesc>Make &apos;char&apos; be unsigned by default</ShortDesc></Flags><Flags><Flag>-traditional</Flag><ShortDesc>Attempt to support traditional K&amp;R style C</ShortDesc></Flags><Flags><Flag>-fno-asm</Flag><ShortDesc>Do not recognise the &apos;asm&apos; keyword</ShortDesc></Flags><Flags><Flag>-fno-builtin</Flag><ShortDesc>Do not recognise any built in functions</ShortDesc></Flags><Flags><Flag>-fhosted</Flag><ShortDesc>Assume normal C execution environment</ShortDesc></Flags><Flags><Flag>-ffreestanding</Flag><ShortDesc>Assume that standard libraries &amp; main might not exist</ShortDesc></Flags><Flags><Flag>-fcond-mismatch</Flag><ShortDesc>Allow different types as args of ? operator</ShortDesc></Flags><Flags><Flag>-fdollars-in-identifier</Flag><ShortDesc>Allow the use of $ inside indentifiers</ShortDesc></Flags><Flags><Flag>-fno-ident</Flag><ShortDesc>Ignore #ident directives</ShortDesc></Flags><Flags><Flag>-fshort-double</Flag><ShortDesc>Use the same size for double as for float</ShortDesc></Flags><Flags><Flag>-fshort-enums</Flag><ShortDesc>Use the smallest fitting integer to hold enums</ShortDesc></Flags><Flags><Flag>-Wall</Flag><ShortDesc>Enable most warning messages</ShortDesc></Flags><Flags><Flag>-Wbad-function-cast</Flag><ShortDesc>Warn about casting functions to incompatible types</ShortDesc></Flags><Flags><Flag>-Wcast-qual</Flag><ShortDesc>Warn about casts which discard qualifiers</ShortDesc></Flags><Flags><Flag>-Wchar-subscripts</Flag><ShortDesc>Warn about subscripts whoes type is &apos;char&apos;</ShortDesc></Flags><Flags><Flag>-Wcomment</Flag><ShortDesc>Warn if nested comments are detected</ShortDesc></Flags><Flags><Flag>-Wconversion</Flag><ShortDesc>Warn about possibly confusing type conversions</ShortDesc></Flags><Flags><Flag>-Wformat</Flag><ShortDesc>Warn about printf format anomalies</ShortDesc></Flags><Flags><Flag>-Wimplicit-function-dec</Flag><ShortDesc>Warn about implicit function declarations</ShortDesc></Flags><Flags><Flag>-Wimplicit-int</Flag><ShortDesc>Warn when a declaration does not specify a type</ShortDesc></Flags><Flags><Flag>-Wimport</Flag><ShortDesc>Warn about the use of the #import directive</ShortDesc></Flags><Flags><Flag>-Wno-long-long</Flag><ShortDesc>Do not warn about using &apos;long long&apos; when -pedantic</ShortDesc></Flags><Flags><Flag>-Wmain</Flag><ShortDesc>Warn about suspicious declarations of main</ShortDesc></Flags><Flags><Flag>-Wmissing-braces</Flag><ShortDesc>Warn about possibly missing braces around initialisers</ShortDesc></Flags><Flags><Flag>-Wmissing-declarations</Flag><ShortDesc>Warn about global funcs without previous declarations</ShortDesc></Flags><Flags><Flag>-Wmissing-prototypes</Flag><ShortDesc>Warn about global funcs without prototypes</ShortDesc></Flags><Flags><Flag>-Wmultichar</Flag><ShortDesc>Warn about use of multicharacter literals</ShortDesc></Flags><Flags><Flag>-Wnested-externs</Flag><ShortDesc>Warn about externs not at file scope level</ShortDesc></Flags><Flags><Flag>-Wparentheses</Flag><ShortDesc>Warn about possible missing parentheses</ShortDesc></Flags><Flags><Flag>-Wpointer-arith</Flag><ShortDesc>Warn about function pointer arithmetic</ShortDesc></Flags><Flags><Flag>-Wredundant-decls</Flag><ShortDesc>Warn about multiple declarations of the same object</ShortDesc></Flags><Flags><Flag>-Wsign-compare</Flag><ShortDesc>Warn about signed/unsigned comparisons</ShortDesc></Flags><Flags><Flag>-Wunknown-pragmas</Flag><ShortDesc>Warn about unrecognised pragmas</ShortDesc></Flags><Flags><Flag>-Wstrict-prototypes</Flag><ShortDesc>Warn about non-prototyped function decls</ShortDesc></Flags><Flags><Flag>-Wtraditional</Flag><ShortDesc>Warn about constructs whoes meaning change in ANSI C</ShortDesc></Flags><Flags><Flag>-Wtrigraphs</Flag><ShortDesc>Warn when trigraphs are encountered</ShortDesc></Flags><Flags><Flag>-Wwrite-strings</Flag><ShortDesc>Mark strings as &apos;const char *&apos;</ShortDesc></Flags></Groups><Groups><GroupName>Options for Objective C</GroupName><Flags><Flag>-gen-decls</Flag><ShortDesc>Dump decls to a .decl file</ShortDesc></Flags><Flags><Flag>-fgnu-runtime</Flag><ShortDesc>Generate code for GNU runtime envrionment</ShortDesc></Flags><Flags><Flag>-fnext-runtime</Flag><ShortDesc>Generate code for NeXT runtime environment</ShortDesc></Flags><Flags><Flag>-Wselector</Flag><ShortDesc>Warn if a selector has multiple methods</ShortDesc></Flags><Flags><Flag>-Wno-protocol</Flag><ShortDesc>Do not warn if inherited methods are unimplemented</ShortDesc></Flags><Flags><Flag>-print-objc-runtime-inf</Flag><ShortDesc>Generate C header of platform specific features</ShortDesc></Flags></Groups><Groups><GroupName>Options for C++</GroupName><Flags><Flag>-fno-access-control</Flag><ShortDesc>Do not obey access control semantics</ShortDesc></Flags><Flags><Flag>-fall-virtual</Flag><ShortDesc>Make all member functions virtual</ShortDesc></Flags><Flags><Flag>-falt-external-template</Flag><ShortDesc>Change when template instances are emitted</ShortDesc></Flags><Flags><Flag>-fcheck-new</Flag><ShortDesc>Check the return value of new</ShortDesc></Flags><Flags><Flag>-fconserve-space</Flag><ShortDesc>Reduce size of object files</ShortDesc></Flags><Flags><Flag>-fno-default-inline</Flag><ShortDesc>Do not inline mmeber functions be default</ShortDesc></Flags><Flags><Flag>-fno-rtti</Flag><ShortDesc>Do not generate run time type descriptor information</ShortDesc></Flags><Flags><Flag>-fno-for-scope</Flag><ShortDesc>Scope of for-init-statement vars extends outside</ShortDesc></Flags><Flags><Flag>-fguiding-decls</Flag><ShortDesc>Implement guiding declarations</ShortDesc></Flags><Flags><Flag>-fno-gnu-keywords</Flag><ShortDesc>Do not recognise GNU defined keywords</ShortDesc></Flags><Flags><Flag>-fhandle-exceptions</Flag><ShortDesc>Enable exception handling</ShortDesc></Flags><Flags><Flag>-fhandle-signatures</Flag><ShortDesc>Handle signature language constructs</ShortDesc></Flags><Flags><Flag>-fhonor-std</Flag><ShortDesc>Do not ignore the namespace standard</ShortDesc></Flags><Flags><Flag>-fhuge-objects</Flag><ShortDesc>Enable support for huge objects</ShortDesc></Flags><Flags><Flag>-fno-implement-inlines</Flag><ShortDesc>Export functions even if they can be inlined</ShortDesc></Flags><Flags><Flag>-fimplicit-templates</Flag><ShortDesc>Emit implicit instatiations if needed</ShortDesc></Flags><Flags><Flag>-flabels-ok</Flag><ShortDesc>Labels can be used as first class objects</ShortDesc></Flags><Flags><Flag>-fmemoize-lookups</Flag><ShortDesc>Enable caching of member function resolutions</ShortDesc></Flags><Flags><Flag>-fname-mangling-version</Flag><ShortDesc>Set the version of name mangling to use</ShortDesc></Flags><Flags><Flag>-fnew-abi</Flag><ShortDesc>Enable experimental ABI changes</ShortDesc></Flags><Flags><Flag>-fno-nonnull-objects</Flag><ShortDesc>Do not assume that a reference is always valid</ShortDesc></Flags><Flags><Flag>-foperator-names</Flag><ShortDesc>Recognise and/bitand/bitor/compl/not/or/xor</ShortDesc></Flags><Flags><Flag>-fno-optional-diags</Flag><ShortDesc>Disable optional diagnostics</ShortDesc></Flags><Flags><Flag>-frepo</Flag><ShortDesc>Enable automatic template instantiation</ShortDesc></Flags><Flags><Flag>-fsave-memoized</Flag><ShortDesc>Save cache of member function resolutions</ShortDesc></Flags><Flags><Flag>-fsquangle</Flag><ShortDesc>Enable squashed name mangling</ShortDesc></Flags><Flags><Flag>-fstats</Flag><ShortDesc>Display statistics accumulated during compilation</ShortDesc></Flags><Flags><Flag>-fno-strict-prototype</Flag><ShortDesc>Do not assume that empty prototype means no args</ShortDesc></Flags><Flags><Flag>-ftemplate-depth-</Flag><ShortDesc>Specify maximum template instantiation depth</ShortDesc></Flags><Flags><Flag>-fthis-is-variable</Flag><ShortDesc>Make &apos;this&apos; not be type &apos;* const&apos;</ShortDesc></Flags><Flags><Flag>-fvtable-thunks</Flag><ShortDesc>Implement vtables using thunks</ShortDesc></Flags><Flags><Flag>-fweak</Flag><ShortDesc>Emit common-like symbols as weak symbols</ShortDesc></Flags><Flags><Flag>-fxref</Flag><ShortDesc>Emit cross referencing information</ShortDesc></Flags><Flags><Flag>-Wreturn-type</Flag><ShortDesc>Warn about inconsistent return types</ShortDesc></Flags><Flags><Flag>-Woverloaded-virtual</Flag><ShortDesc>Warn about overloaded virtual function names</ShortDesc></Flags><Flags><Flag>-Wctor-dtor-privacy</Flag><ShortDesc>Warn when all ctors/dtors are private</ShortDesc></Flags><Flags><Flag>-Wnon-virtual-dtor</Flag><ShortDesc>Warn about non virtual destructors</ShortDesc></Flags><Flags><Flag>-Wextern-inline</Flag><ShortDesc>Warn when a function is declared extern, then inline</ShortDesc></Flags><Flags><Flag>-Wreorder</Flag><ShortDesc>Warn when the compiler reorders code</ShortDesc></Flags><Flags><Flag>-Wsynth</Flag><ShortDesc>Warn when synthesis behaviour differs from Cfront</ShortDesc></Flags><Flags><Flag>-Wpmf-conversions</Flag><ShortDesc>Warn when type converting pointers to member functions</ShortDesc></Flags><Flags><Flag>-Weffc++</Flag><ShortDesc>Warn about violations of Effective C++ style rules</ShortDesc></Flags><Flags><Flag>-Wsign-promo</Flag><ShortDesc>Warn when overload promotes from unsigned to signed</ShortDesc></Flags><Flags><Flag>-Wold-style-cast</Flag><ShortDesc>Warn if a C style cast is used in a program</ShortDesc></Flags></Groups><Groups><GroupName>Options for Fortran</GroupName><Flags><Flag>-fversion</Flag><ShortDesc>Print g77-specific compiler version info, run internal tests</ShortDesc></Flags><Flags><Flag>-ff66</Flag><ShortDesc>Program is written in typical FORTRAN 66 dialect</ShortDesc></Flags><Flags><Flag>-ff77</Flag><ShortDesc>Program is written in typical Unix f77 dialect</ShortDesc></Flags><Flags><Flag>-fno-f77</Flag><ShortDesc>Program does not use Unix-f77 dialectal features</ShortDesc></Flags><Flags><Flag>-ff90</Flag><ShortDesc>Program is written in Fortran-90-ish dialect</ShortDesc></Flags><Flags><Flag>-fno-automatic</Flag><ShortDesc>Treat local vars and COMMON blocks as if they were named in SAVE statements</ShortDesc></Flags><Flags><Flag>-fdollar-ok</Flag><ShortDesc>Allow $ in symbol names</ShortDesc></Flags><Flags><Flag>-fno-f2c</Flag><ShortDesc>f2c-compatible code need not be generated</ShortDesc></Flags><Flags><Flag>-fno-f2c-library</Flag><ShortDesc>Unsupported; do not generate libf2c-calling code</ShortDesc></Flags><Flags><Flag>-ffree-form</Flag><ShortDesc>Program is written in Fortran-90-ish free form</ShortDesc></Flags><Flags><Flag>-fpedantic</Flag><ShortDesc>Warn about use of (only a few for now) Fortran extensions</ShortDesc></Flags><Flags><Flag>-fvxt</Flag><ShortDesc>Program is written in VXT (Digital-like) FORTRAN</ShortDesc></Flags><Flags><Flag>-fugly</Flag><ShortDesc>Obsolete; allow certain ugly features</ShortDesc></Flags><Flags><Flag>-fno-ugly-args</Flag><ShortDesc>Hollerith and typeless constants not passed as arguments</ShortDesc></Flags><Flags><Flag>-fugly-assign</Flag><ShortDesc>Allow ordinary copying of ASSIGN&apos;ed vars</ShortDesc></Flags><Flags><Flag>-fugly-assumed</Flag><ShortDesc>Dummy array dimensioned to (1) is assumed-size</ShortDesc></Flags><Flags><Flag>-fugly-comma</Flag><ShortDesc>Trailing comma in procedure call denotes null argument</ShortDesc></Flags><Flags><Flag>-fugly-complex</Flag><ShortDesc>Allow REAL(Z) and AIMAG(Z) given DOUBLE COMPLEX Z</ShortDesc></Flags><Flags><Flag>-fno-ugly-init</Flag><ShortDesc>Initialization via DATA and PARAMETER is type-compatible</ShortDesc></Flags><Flags><Flag>-fugly-logint</Flag><ShortDesc>Allow INTEGER and LOGICAL interchangeability</ShortDesc></Flags><Flags><Flag>-fxyzzy</Flag><ShortDesc>Print internal debugging-related info</ShortDesc></Flags><Flags><Flag>-finit-local-zero</Flag><ShortDesc>Initialize local vars and arrays to zero</ShortDesc></Flags><Flags><Flag>-fno-backslash</Flag><ShortDesc>Backslashes in character/hollerith constants not special (C-style)</ShortDesc></Flags><Flags><Flag>-fno-emulate-complex</Flag><ShortDesc>Have compiler back end cope with COMPLEX arithmetic</ShortDesc></Flags><Flags><Flag>-fno-underscoring</Flag><ShortDesc>Disable the appending of underscores to externals</ShortDesc></Flags><Flags><Flag>-fno-second-underscore</Flag><ShortDesc>Never append a second underscore to externals</ShortDesc></Flags><Flags><Flag>-fintrin-case-initcap</Flag><ShortDesc>Intrinsics spelled as e.g. SqRt</ShortDesc></Flags><Flags><Flag>-fintrin-case-upper</Flag><ShortDesc>Intrinsics in uppercase</ShortDesc></Flags><Flags><Flag>-fintrin-case-any</Flag><ShortDesc>Intrinsics letters in arbitrary cases</ShortDesc></Flags><Flags><Flag>-fmatch-case-initcap</Flag><ShortDesc>Language keywords spelled as e.g. IOStat</ShortDesc></Flags><Flags><Flag>-fmatch-case-upper</Flag><ShortDesc>Language keywords in uppercase</ShortDesc></Flags><Flags><Flag>-fmatch-case-any</Flag><ShortDesc>Language keyword letters in arbitrary cases</ShortDesc></Flags><Flags><Flag>-fsource-case-upper</Flag><ShortDesc>Internally convert most source to uppercase</ShortDesc></Flags><Flags><Flag>-fsource-case-preserve</Flag><ShortDesc>Internally preserve source case</ShortDesc></Flags><Flags><Flag>-fsymbol-case-initcap</Flag><ShortDesc>Symbol names spelled in mixed case</ShortDesc></Flags><Flags><Flag>-fsymbol-case-upper</Flag><ShortDesc>Symbol names in uppercase</ShortDesc></Flags><Flags><Flag>-fsymbol-case-lower</Flag><ShortDesc>Symbol names in lowercase</ShortDesc></Flags><Flags><Flag>-fcase-strict-upper</Flag><ShortDesc>Program written in uppercase</ShortDesc></Flags><Flags><Flag>-fcase-strict-lower</Flag><ShortDesc>Program written in lowercase</ShortDesc></Flags><Flags><Flag>-fcase-initcap</Flag><ShortDesc>Program written in strict mixed-case</ShortDesc></Flags><Flags><Flag>-fcase-upper</Flag><ShortDesc>Compile as if program written in uppercase</ShortDesc></Flags><Flags><Flag>-fcase-lower</Flag><ShortDesc>Compile as if program written in lowercase</ShortDesc></Flags><Flags><Flag>-fcase-preserve</Flag><ShortDesc>Preserve all spelling (case) used in program</ShortDesc></Flags><Flags><Flag>-fbadu77-intrinsics-del</Flag><ShortDesc>Delete libU77 intrinsics with bad interfaces</ShortDesc></Flags><Flags><Flag>-fbadu77-intrinsics-dis</Flag><ShortDesc>Disable libU77 intrinsics with bad interfaces</ShortDesc></Flags><Flags><Flag>-fbadu77-intrinsics-hid</Flag><ShortDesc>Hide libU77 intrinsics with bad interfaces</ShortDesc></Flags><Flags><Flag>-ff2c-intrinsics-delete</Flag><ShortDesc>Delete non-FORTRAN-77 intrinsics f2c supports</ShortDesc></Flags><Flags><Flag>-ff2c-intrinsics-disabl</Flag><ShortDesc>Disable non-FORTRAN-77 intrinsics f2c supports</ShortDesc></Flags><Flags><Flag>-ff2c-intrinsics-hide</Flag><ShortDesc>Hide non-FORTRAN-77 intrinsics f2c supports</ShortDesc></Flags><Flags><Flag>-ff90-intrinsics-delete</Flag><ShortDesc>Delete non-FORTRAN-77 intrinsics F90 supports</ShortDesc></Flags><Flags><Flag>-ff90-intrinsics-disabl</Flag><ShortDesc>Disable non-FORTRAN-77 intrinsics F90 supports</ShortDesc></Flags><Flags><Flag>-ff90-intrinsics-hide</Flag><ShortDesc>Hide non-FORTRAN-77 intrinsics F90 supports</ShortDesc></Flags><Flags><Flag>-fgnu-intrinsics-delete</Flag><ShortDesc>Delete non-FORTRAN-77 intrinsics g77 supports</ShortDesc></Flags><Flags><Flag>-fgnu-intrinsics-disabl</Flag><ShortDesc>Disable non-FORTRAN 77 intrinsics F90 supports</ShortDesc></Flags><Flags><Flag>-fgnu-intrinsics-hide</Flag><ShortDesc>Hide non-FORTRAN 77 intrinsics F90 supports</ShortDesc></Flags><Flags><Flag>-fmil-intrinsics-delete</Flag><ShortDesc>Delete MIL-STD 1753 intrinsics</ShortDesc></Flags><Flags><Flag>-fmil-intrinsics-disabl</Flag><ShortDesc>Disable MIL-STD 1753 intrinsics</ShortDesc></Flags><Flags><Flag>-fmil-intrinsics-hide</Flag><ShortDesc>Hide MIL-STD 1753 intrinsics</ShortDesc></Flags><Flags><Flag>-funix-intrinsics-delet</Flag><ShortDesc>Delete libU77 intrinsics</ShortDesc></Flags><Flags><Flag>-funix-intrinsics-disab</Flag><ShortDesc>Disable libU77 intrinsics</ShortDesc></Flags><Flags><Flag>-funix-intrinsics-hide</Flag><ShortDesc>Hide libU77 intrinsics</ShortDesc></Flags><Flags><Flag>-fvxt-intrinsics-delete</Flag><ShortDesc>Delete non-FORTRAN-77 intrinsics VXT FORTRAN supports</ShortDesc></Flags><Flags><Flag>-fvxt-intrinsics-disabl</Flag><ShortDesc>Disable non-FORTRAN-77 intrinsics VXT FORTRAN supports</ShortDesc></Flags><Flags><Flag>-fvxt-intrinsics-hide</Flag><ShortDesc>Hide non-FORTRAN-77 intrinsics VXT FORTRAN supports</ShortDesc></Flags><Flags><Flag>-fzeros</Flag><ShortDesc>Treat initial values of 0 like non-zero values</ShortDesc></Flags><Flags><Flag>-fdebug-kludge</Flag><ShortDesc>Emit special debugging information for COMMON and EQUIVALENCE</ShortDesc></Flags><Flags><Flag>-fonetrip</Flag><ShortDesc>Take at least one trip through each iterative DO loop</ShortDesc></Flags><Flags><Flag>-fno-silent</Flag><ShortDesc>Print names of program units as they are compiled</ShortDesc></Flags><Flags><Flag>-fno-globals</Flag><ShortDesc>Disable fatal diagnostics about inter-procedural problems</ShortDesc></Flags><Flags><Flag>-ftypeless-boz</Flag><ShortDesc>Make prefix-radix non-decimal constants be typeless</ShortDesc></Flags><Flags><Flag>-Wno-globals</Flag><ShortDesc>Disable warnings about inter-procedural problems</ShortDesc></Flags><Flags><Flag>-Wsurprising</Flag><ShortDesc>Warn about constructs with surprising meanings</ShortDesc></Flags><Flags><Flag>-I</Flag><ShortDesc>Add a directory for INCLUDE searching</ShortDesc></Flags><Flags><Flag>-ffixed-line-length-</Flag><ShortDesc>Set the maximum line length</ShortDesc></Flags></Groups><Groups><GroupName>Options for as</GroupName><Flags><Flag>-a[sub-option...]</Flag><ShortDesc>turn on listings Sub-options [default hls]: c omit false conditionals, d omit debugging directives, h include high-level source, l include assembly, m include macro expansions,n omit forms processing, s include symbols, L include line debug statistics (if applicable), =file set listing file name (must be last sub-option)</ShortDesc></Flags><Flags><Flag>-D</Flag><ShortDesc>produce assembler debugging messages</ShortDesc></Flags><Flags><Flag>--defsym SYM=VAL</Flag><ShortDesc>define symbol SYM to given value</ShortDesc></Flags><Flags><Flag>-f</Flag><ShortDesc>skip whitespace and comment preprocessing</ShortDesc></Flags><Flags><Flag>--gstabs</Flag><ShortDesc>generate stabs debugging information</ShortDesc></Flags><Flags><Flag>--gdwarf2</Flag><ShortDesc>generate DWARF2 debugging information</ShortDesc></Flags><Flags><Flag>--help</Flag><ShortDesc>show help message and exit</ShortDesc></Flags><Flags><Flag>-I DIR</Flag><ShortDesc>add DIR to search list for .include directives</ShortDesc></Flags><Flags><Flag>-J</Flag><ShortDesc>don&apos;t warn about signed overflow</ShortDesc></Flags><Flags><Flag>-K</Flag><ShortDesc>warn when differences altered for long displacements</ShortDesc></Flags><Flags><Flag>-L,--keep-locals</Flag><ShortDesc>keep local symbols (e.g. starting with `L&apos;)</ShortDesc></Flags><Flags><Flag>-M,--mri</Flag><ShortDesc>assemble in MRI compatibility mode</ShortDesc></Flags><Flags><Flag>--MD FILE</Flag><ShortDesc>write dependency information in FILE (default none)</ShortDesc></Flags><Flags><Flag>-nocpp</Flag><ShortDesc>ignored</ShortDesc></Flags><Flags><Flag>-o OBJFILE</Flag><ShortDesc>name the object-file output OBJFILE (default a.out)</ShortDesc></Flags><Flags><Flag>-R</Flag><ShortDesc>fold data section into text section</ShortDesc></Flags><Flags><Flag>--statistics</Flag><ShortDesc>print various measured statistics from execution</ShortDesc></Flags><Flags><Flag>--strip-local-absolute</Flag><ShortDesc>strip local absolute symbols</ShortDesc></Flags><Flags><Flag>--traditional-format</Flag><ShortDesc>Use same format as native assembler when possible</ShortDesc></Flags><Flags><Flag>--version</Flag><ShortDesc>print assembler version number and exit</ShortDesc></Flags><Flags><Flag>-W  --no-warn</Flag><ShortDesc>suppress warnings</ShortDesc></Flags><Flags><Flag>--warn</Flag><ShortDesc>don&apos;t suppress warnings</ShortDesc></Flags><Flags><Flag>--fatal-warnings</Flag><ShortDesc>treat warnings as errors</ShortDesc></Flags><Flags><Flag>--itbl INSTTBL</Flag><ShortDesc>extend instruction set to include instructions matching the specifications defined in file INSTTBL</ShortDesc></Flags><Flags><Flag>-w</Flag><ShortDesc>ignored</ShortDesc></Flags><Flags><Flag>-X</Flag><ShortDesc>ignored</ShortDesc></Flags><Flags><Flag>-Z</Flag><ShortDesc>generate object file even after errors</ShortDesc></Flags><Flags><Flag>--listing-lhs-width</Flag><ShortDesc>set the width in words of the output data column of the listing</ShortDesc></Flags><Flags><Flag>--listing-lhs-width2</Flag><ShortDesc>set the width in words of the continuation lines of the output data column; ignored if smaller than the width of the first line</ShortDesc></Flags><Flags><Flag>--listing-rhs-width</Flag><ShortDesc>set the max width in characters of the lines from the source file</ShortDesc></Flags><Flags><Flag>--listing-cont-lines</Flag><ShortDesc>set the maximum number of continuation lines used for the output data column of the listing</ShortDesc></Flags><Flags><Flag>-m</Flag><ShortDesc>do long jump</ShortDesc></Flags><Flags><Flag>-V</Flag><ShortDesc>print assembler version number</ShortDesc></Flags><Flags><Flag>-k</Flag><ShortDesc>ignored</ShortDesc></Flags><Flags><Flag>-Qy, -Qn</Flag><ShortDesc>ignored</ShortDesc></Flags><Flags><Flag>-q</Flag><ShortDesc>ignored</ShortDesc></Flags><Flags><Flag>-s</Flag><ShortDesc>ignored</ShortDesc></Flags></Groups><Groups><GroupName>Options for ld</GroupName><Flags><Flag>-a KEYWORD</Flag><ShortDesc>Shared library control for HP/UX compatibility</ShortDesc></Flags><Flags><Flag>-A ARCH</Flag><ShortDesc>Set architecture</ShortDesc></Flags><Flags><Flag>--architecture ARCH</Flag><ShortDesc>Set architecture</ShortDesc></Flags><Flags><Flag>-b TARGET</Flag><ShortDesc>Specify target for following input files</ShortDesc></Flags><Flags><Flag>--format TARGET</Flag><ShortDesc>Specify target for following input files</ShortDesc></Flags><Flags><Flag>-c FILE</Flag><ShortDesc>Read MRI format linker script</ShortDesc></Flags><Flags><Flag>--mri-script FILE</Flag><ShortDesc>Read MRI format linker script</ShortDesc></Flags><Flags><Flag>-d</Flag><ShortDesc>Force common symbols to be defined</ShortDesc></Flags><Flags><Flag>-dc</Flag><ShortDesc>Force common symbols to be defined</ShortDesc></Flags><Flags><Flag>-dp</Flag><ShortDesc>Force common symbols to be defined</ShortDesc></Flags><Flags><Flag>-e ADDRESS</Flag><ShortDesc>Set start address</ShortDesc></Flags><Flags><Flag>--entry ADDRESS</Flag><ShortDesc>Set start address</ShortDesc></Flags><Flags><Flag>-E</Flag><ShortDesc>Export all dynamic symbols</ShortDesc></Flags><Flags><Flag>--export-dynamic</Flag><ShortDesc>Export all dynamic symbols</ShortDesc></Flags><Flags><Flag>-EB</Flag><ShortDesc>Link big-endian objects</ShortDesc></Flags><Flags><Flag>-EL</Flag><ShortDesc>Link little-endian objects</ShortDesc></Flags><Flags><Flag>-f SHLIB</Flag><ShortDesc>Auxiliary filter for shared object symbol table</ShortDesc></Flags><Flags><Flag>--auxiliary SHLIB</Flag><ShortDesc>Auxiliary filter for shared object symbol table</ShortDesc></Flags><Flags><Flag>-F SHLIB</Flag><ShortDesc>Filter for shared object symbol table</ShortDesc></Flags><Flags><Flag>--filter SHLIB</Flag><ShortDesc>Filter for shared object symbol table</ShortDesc></Flags><Flags><Flag>-g</Flag><ShortDesc>Ignored</ShortDesc></Flags><Flags><Flag>-G SIZE</Flag><ShortDesc>Small data size (if no size, same as --shared)</ShortDesc></Flags><Flags><Flag>--gpsize SIZE</Flag><ShortDesc>Small data size (if no size, same as --shared)</ShortDesc></Flags><Flags><Flag>-h FILENAME</Flag><ShortDesc>Set internal name of shared library</ShortDesc></Flags><Flags><Flag>-soname FILENAME</Flag><ShortDesc>Set internal name of shared library</ShortDesc></Flags><Flags><Flag>-l LIBNAME</Flag><ShortDesc>Search for library LIBNAME</ShortDesc></Flags><Flags><Flag>--library LIBNAME</Flag><ShortDesc>Search for library LIBNAME</ShortDesc></Flags><Flags><Flag>-L DIRECTORY</Flag><ShortDesc>Add DIRECTORY to library search path</ShortDesc></Flags><Flags><Flag>--library-path DIRECTORY</Flag><ShortDesc>Add DIRECTORY to library search path</ShortDesc></Flags><Flags><Flag>-m EMULATION</Flag><ShortDesc>Set emulation</ShortDesc></Flags><Flags><Flag>-M</Flag><ShortDesc>Print map file on standard output</ShortDesc></Flags><Flags><Flag>--print-map</Flag><ShortDesc>Print map file on standard output</ShortDesc></Flags><Flags><Flag>-n</Flag><ShortDesc>Do not page align data</ShortDesc></Flags><Flags><Flag>--nmagic</Flag><ShortDesc>Do not page align data</ShortDesc></Flags><Flags><Flag>-N</Flag><ShortDesc>Do not page align data, do not make text readonly</ShortDesc></Flags><Flags><Flag>--omagic</Flag><ShortDesc>Do not page align data, do not make text readonly</ShortDesc></Flags><Flags><Flag>-o FILE</Flag><ShortDesc>Set output file name</ShortDesc></Flags><Flags><Flag>--output FILE</Flag><ShortDesc>Set output file name</ShortDesc></Flags><Flags><Flag>-O</Flag><ShortDesc>Optimize output file</ShortDesc></Flags><Flags><Flag>-Qy</Flag><ShortDesc>Ignored for SVR4 compatibility</ShortDesc></Flags><Flags><Flag>-r</Flag><ShortDesc>Generate relocateable output</ShortDesc></Flags><Flags><Flag>-i</Flag><ShortDesc>Generate relocateable output</ShortDesc></Flags><Flags><Flag>--relocateable</Flag><ShortDesc>Generate relocateable output</ShortDesc></Flags><Flags><Flag>-R FILE</Flag><ShortDesc>Just link symbols (if directory, same as --rpath)</ShortDesc></Flags><Flags><Flag>--just-symbols FILE</Flag><ShortDesc>Just link symbols (if directory, same as --rpath)</ShortDesc></Flags><Flags><Flag>-s</Flag><ShortDesc>Strip all symbols</ShortDesc></Flags><Flags><Flag>--strip-all</Flag><ShortDesc>Strip all symbols</ShortDesc></Flags><Flags><Flag>-S</Flag><ShortDesc>Strip debugging symbols</ShortDesc></Flags><Flags><Flag>--strip-debug</Flag><ShortDesc>Strip debugging symbols</ShortDesc></Flags><Flags><Flag>-t</Flag><ShortDesc>Trace file opens</ShortDesc></Flags><Flags><Flag>--trace</Flag><ShortDesc>Trace file opens</ShortDesc></Flags><Flags><Flag>-T FILE</Flag><ShortDesc>Read linker script</ShortDesc></Flags><Flags><Flag>--script FILE</Flag><ShortDesc>Read linker script</ShortDesc></Flags><Flags><Flag>-u SYMBOL</Flag><ShortDesc>Start with undefined reference to SYMBOL</ShortDesc></Flags><Flags><Flag>--undefined SYMBOL</Flag><ShortDesc>Start with undefined reference to SYMBOL</ShortDesc></Flags><Flags><Flag>-Ur</Flag><ShortDesc>Build global constructor/destructor tables</ShortDesc></Flags><Flags><Flag>-v</Flag><ShortDesc>Print version information</ShortDesc></Flags><Flags><Flag>--version</Flag><ShortDesc>Print version information</ShortDesc></Flags><Flags><Flag>-V</Flag><ShortDesc>Print version and emulation information</ShortDesc></Flags><Flags><Flag>-x</Flag><ShortDesc>Discard all local symbols</ShortDesc></Flags><Flags><Flag>--discard-all</Flag><ShortDesc>Discard all local symbols</ShortDesc></Flags><Flags><Flag>-X</Flag><ShortDesc>Discard temporary local symbols</ShortDesc></Flags><Flags><Flag>--discard-locals</Flag><ShortDesc>Discard temporary local symbols</ShortDesc></Flags><Flags><Flag>-y SYMBOL</Flag><ShortDesc>Trace mentions of SYMBOL</ShortDesc></Flags><Flags><Flag>--trace-symbol SYMBOL </Flag><ShortDesc>Trace mentions of SYMBOL</ShortDesc></Flags><Flags><Flag>-Y PATH</Flag><ShortDesc>Default search path for Solaris compatibility</ShortDesc></Flags><Flags><Flag>-z KEYWORD</Flag><ShortDesc>Ignored for Solaris compatibility</ShortDesc></Flags><Flags><Flag>-(</Flag><ShortDesc>Start a group</ShortDesc></Flags><Flags><Flag>--start-group</Flag><ShortDesc>Start a group</ShortDesc></Flags><Flags><Flag>-)</Flag><ShortDesc>End a group</ShortDesc></Flags><Flags><Flag>--end-group</Flag><ShortDesc>End a group</ShortDesc></Flags><Flags><Flag>-assert KEYWORD</Flag><ShortDesc>Ignored for SunOS compatibility</ShortDesc></Flags><Flags><Flag>-Bdynamic</Flag><ShortDesc>Link against shared libraries</ShortDesc></Flags><Flags><Flag>-dy</Flag><ShortDesc>Link against shared libraries</ShortDesc></Flags><Flags><Flag>-call_shared</Flag><ShortDesc>Link against shared libraries</ShortDesc></Flags><Flags><Flag>-Bstatic</Flag><ShortDesc>Do not link against shared libraries</ShortDesc></Flags><Flags><Flag>-dn</Flag><ShortDesc>Do not link against shared libraries</ShortDesc></Flags><Flags><Flag>-non_shared</Flag><ShortDesc>Do not link against shared libraries</ShortDesc></Flags><Flags><Flag>-static</Flag><ShortDesc>Do not link against shared libraries</ShortDesc></Flags><Flags><Flag>-Bsymbolic</Flag><ShortDesc>Bind global references locally</ShortDesc></Flags><Flags><Flag>--check-sections</Flag><ShortDesc>Check section addresses for overlaps (default)</ShortDesc></Flags><Flags><Flag>--no-check-sections</Flag><ShortDesc>Do not check section addresses for overlaps</ShortDesc></Flags><Flags><Flag>--cref</Flag><ShortDesc>Output cross reference table</ShortDesc></Flags><Flags><Flag>--defsym SYMBOL=EXPRESSION</Flag><ShortDesc>Define a symbol</ShortDesc></Flags><Flags><Flag>--demangle</Flag><ShortDesc>Demangle symbol names</ShortDesc></Flags><Flags><Flag>--demangler DSO:FUNCTION</Flag><ShortDesc>Set DSO and demangler function</ShortDesc></Flags><Flags><Flag>--dynamic-linker PROGRAM</Flag><ShortDesc>Set the dynamic linker to use</ShortDesc></Flags><Flags><Flag>--embedded-relocs</Flag><ShortDesc>Generate embedded relocs</ShortDesc></Flags><Flags><Flag>-fini SYMBOL</Flag><ShortDesc>Call SYMBOL at unload-time</ShortDesc></Flags><Flags><Flag>--force-exe-suffix</Flag><ShortDesc>Force generation of file with .exe suffix</ShortDesc></Flags><Flags><Flag>--gc-sections</Flag><ShortDesc>Remove unused sections (on some targets)</ShortDesc></Flags><Flags><Flag>--no-gc-sections</Flag><ShortDesc>Don&apos;t remove unused sections (default)</ShortDesc></Flags><Flags><Flag>--help</Flag><ShortDesc>Print option help</ShortDesc></Flags><Flags><Flag>-init SYMBOL</Flag><ShortDesc>Call SYMBOL at load-time</ShortDesc></Flags><Flags><Flag>-Map FILE</Flag><ShortDesc>Write a map file</ShortDesc></Flags><Flags><Flag>--multilib-dir PATH</Flag><ShortDesc>Specify a target directory</ShortDesc></Flags><Flags><Flag>--no-demangle</Flag><ShortDesc>Do not demangle symbol names</ShortDesc></Flags><Flags><Flag>--no-keep-memory</Flag><ShortDesc>Use less memory and more disk I/O</ShortDesc></Flags><Flags><Flag>--no-undefined</Flag><ShortDesc>Allow no undefined symbols</ShortDesc></Flags><Flags><Flag>--no-warn-mismatch</Flag><ShortDesc>Don&apos;t warn about mismatched input files</ShortDesc></Flags><Flags><Flag>--no-whole-archive</Flag><ShortDesc>Turn off --whole-archive</ShortDesc></Flags><Flags><Flag>--noinhibit-exec</Flag><ShortDesc>Create an output file even if errors occur</ShortDesc></Flags><Flags><Flag>--oformat TARGET</Flag><ShortDesc>Specify target of output file</ShortDesc></Flags><Flags><Flag>-qmagic</Flag><ShortDesc>Ignored for Linux compatibility</ShortDesc></Flags><Flags><Flag>--relax</Flag><ShortDesc>Relax branches on certain targets</ShortDesc></Flags><Flags><Flag>--retain-symbols-file FILE</Flag><ShortDesc>Keep only symbols listed in FILE</ShortDesc></Flags><Flags><Flag>-rpath PATH</Flag><ShortDesc>Set runtime shared library search path</ShortDesc></Flags><Flags><Flag>-rpath-link PATH</Flag><ShortDesc>Set link time shared library search path</ShortDesc></Flags><Flags><Flag>-shared</Flag><ShortDesc>Create a shared library</ShortDesc></Flags><Flags><Flag>-Bshareable</Flag><ShortDesc>Create a shared library</ShortDesc></Flags><Flags><Flag>--sort-common</Flag><ShortDesc>Sort common symbols by size</ShortDesc></Flags><Flags><Flag>--split-by-file</Flag><ShortDesc>Split output sections for each file</ShortDesc></Flags><Flags><Flag>--split-by-reloc COUNT</Flag><ShortDesc>Split output sections every COUNT relocs</ShortDesc></Flags><Flags><Flag>--stats</Flag><ShortDesc>Print memory usage statistics</ShortDesc></Flags><Flags><Flag>--style {gnu,lucid,arm,hp,edg,gnat,compaq} Set demangling style</Flag></Flags><Flags><Flag>--task-link SYMBOL</Flag><ShortDesc>Do task level linking</ShortDesc></Flags><Flags><Flag>--traditional-format</Flag><ShortDesc>Use same format as native linker</ShortDesc></Flags><Flags><Flag>-Tbss ADDRESS</Flag><ShortDesc>Set address of .bss section</ShortDesc></Flags><Flags><Flag>-Tdata ADDRESS</Flag><ShortDesc>Set address of .data section</ShortDesc></Flags><Flags><Flag>-Ttext ADDRESS</Flag><ShortDesc>Set address of .text section</ShortDesc></Flags><Flags><Flag>--verbose</Flag><ShortDesc>Output lots of information during link</ShortDesc></Flags><Flags><Flag>--version-script FILE</Flag><ShortDesc>Read version information script</ShortDesc></Flags><Flags><Flag>--version-exports-section SYMBOL</Flag><ShortDesc>Take export symbols list from .exports, using SYMBOL as the version.</ShortDesc></Flags><Flags><Flag>--warn-common</Flag><ShortDesc>Warn about duplicate common symbols</ShortDesc></Flags><Flags><Flag>--warn-constructors</Flag><ShortDesc>Warn if global constructors/destructors are seen</ShortDesc></Flags><Flags><Flag>--warn-multiple-gp</Flag><ShortDesc>Warn if the multiple GP values are used</ShortDesc></Flags><Flags><Flag>--warn-once</Flag><ShortDesc>Warn only once per undefined symbol</ShortDesc></Flags><Flags><Flag>--warn-section-align</Flag><ShortDesc>Warn if start of section changes due to alignment</ShortDesc></Flags><Flags><Flag>--whole-archive</Flag><ShortDesc>Include all objects from following archives</ShortDesc></Flags><Flags><Flag>--wrap SYMBOL</Flag><ShortDesc>Use wrapper functions for SYMBOL</ShortDesc></Flags><Flags><Flag>--mpc860c0 [=WORDS]</Flag><ShortDesc>Modify problematic branches in last WORDS (1-10, default 5) words of a page</ShortDesc></Flags></Groups><Groups><GroupName>Options for gcc</GroupName><Flags><Flag>--help</Flag><ShortDesc>Display help information</ShortDesc></Flags><Flags><Flag>-dumpspecs</Flag><ShortDesc>Display all of the built in spec strings</ShortDesc></Flags><Flags><Flag>-dumpversion</Flag><ShortDesc>Display the version of the compiler</ShortDesc></Flags><Flags><Flag>-dumpmachine</Flag><ShortDesc>Display the compiler&apos;s target processor</ShortDesc></Flags><Flags><Flag>-print-search-dirs</Flag><ShortDesc>Display the directories in the compiler&apos;s search path</ShortDesc></Flags><Flags><Flag>-print-libgcc-file-name</Flag><ShortDesc>Display the name of the compiler&apos;s companion library</ShortDesc></Flags><Flags><Flag>-print-file-name=&lt;lib&gt;</Flag><ShortDesc>Display the full path to library &lt;lib&gt;</ShortDesc></Flags><Flags><Flag>-print-prog-name=&lt;prog&gt;</Flag><ShortDesc>Display the full path to compiler component &lt;prog&gt;</ShortDesc></Flags><Flags><Flag>-print-multi-directory</Flag><ShortDesc>Display the root directory for versions of libgcc</ShortDesc></Flags><Flags><Flag>-print-multi-lib</Flag><ShortDesc>Display the mapping between command line options and multiple library search directories</ShortDesc></Flags><Flags><Flag>-Wa,&lt;options&gt;</Flag><ShortDesc>Pass comma-separated &lt;options&gt; on to the assembler</ShortDesc></Flags><Flags><Flag>-Wp,&lt;options&gt;</Flag><ShortDesc>Pass comma-separated &lt;options&gt; on to the preprocessor</ShortDesc></Flags><Flags><Flag>-Wl,&lt;options&gt;</Flag><ShortDesc>Pass comma-separated &lt;options&gt; on to the linker</ShortDesc></Flags><Flags><Flag>-Xlinker &lt;arg&gt;</Flag><ShortDesc>Pass &lt;arg&gt; on to the linker</ShortDesc></Flags><Flags><Flag>-save-temps</Flag><ShortDesc>Do not delete intermediate files</ShortDesc></Flags><Flags><Flag>-pipe</Flag><ShortDesc>Use pipes rather than intermediate files</ShortDesc></Flags><Flags><Flag>-specs=&lt;file&gt;</Flag><ShortDesc>Override builtin specs with the contents of &lt;file&gt;</ShortDesc></Flags><Flags><Flag>-B &lt;directory&gt;</Flag><ShortDesc>Add &lt;directory&gt; to the compiler&apos;s search paths</ShortDesc></Flags><Flags><Flag>-b &lt;machine&gt;</Flag><ShortDesc>Run gcc for target &lt;machine&gt;, if installed</ShortDesc></Flags><Flags><Flag>-V &lt;version&gt;</Flag><ShortDesc>Run gcc version number &lt;version&gt;, if installed</ShortDesc></Flags><Flags><Flag>-v</Flag><ShortDesc>Display the programs invoked by the compiler</ShortDesc></Flags><Flags><Flag>-E</Flag><ShortDesc>Preprocess only; do not compile, assemble or link</ShortDesc></Flags><Flags><Flag>-S</Flag><ShortDesc>Compile only; do not assemble or link</ShortDesc></Flags><Flags><Flag>-c</Flag><ShortDesc>Compile and assemble, but do not link</ShortDesc></Flags><Flags><Flag>-o &lt;file&gt;</Flag><ShortDesc>Place the output into &lt;file&gt;</ShortDesc></Flags><Flags><Flag>-x &lt;language&gt;</Flag><ShortDesc>Specify the language of the following input files.  Permissable languages include: c c++ assembler none.  &apos;none&apos; means revert to the default behaviour of guessing the language based on the file&apos;s extension</ShortDesc></Flags></Groups></CompilerLinker>