$ScriptVersion = '$Header: /CVS/openmake64/tomcat/webapps/openmake.ear/openmake.war/scripts/Visual\040Studio\0407\040C#\040Compiler.sc,v 1.3 2005/06/06 16:18:05 jim Exp $';
#-- Clean up $ScriptVersion so that it prints useful information
if ($ScriptVersion =~ /^\s*\$Header:\s*(\S+),v\s+(\S+)\s+(\S+)\s+(\S+)/ )
{
 my $path = $1;
 my $version = $2;
 my $date = $3;
 my $time = $4;
 
 #-- massage path
 $path =~ s/\\040/ /g;
 my @t = split /\//, $path;
 my $file = pop @t;
 my $module = $t[2];
 
 $ScriptVersion = "$module, v$version";
}

#########################################
#-- Load Openmake Variables from Data File
#   Uncomment Openmake objects that need to be loaded

#  @PerlData = $AllDeps->load("AllDeps", @PerlData );
#  @PerlData = $RelDeps->load("RelDeps", @PerlData );
#  @PerlData = $NewerDeps->load("NewerDeps", @PerlData );
@PerlData = $TargetDeps->load("TargetDeps", @PerlData );
#  @PerlData = $TargetRelDeps->load("TargetRelDeps", @PerlData );
#  @PerlData = $TargetSrcDeps->load("TargetSrcDeps", @PerlData );

####### Setting Compiler Choice and Search Behavior #######  

@CompilersPassedInFlags = ("csc");
$DefaultCompiler  = "csc";

($Compiler,$Flags) = get_compiler($DebugFlags,$ReleaseFlags,$DefaultCompiler,@CompilersPassedInFlags);

$TargetFile = $Target->get;
$TargetName = $Target->getF;
$TargetName =~ tr/[a-z]/[A-Z]/;

$Source = $TargetDeps->getExtQuoted(qw(.CS));
$Source =~ s/;/ /g;

$Resources = $TargetDeps->getExtQuoted(qw(.resx));
@ResList = split(/;/,$Resources);

$References = $TargetDeps->getExtQuoted(qw(.dll));
@RefList = split(/;/,$References);

$Icon = $TargetDeps->getExtQuoted(qw(.ico));
$Icon = "/win32icon:$Icon" if ($Icon ne "");

GenerateBillofMat($BillOfMaterialFile->get,$BillOfMaterialRpt,$Target->get) if ( defined $BillOfMaterialFile); # MG 02/06/2003 - Case 2786: No Bom Report for C# builds

($tmpfh, $rsp) = tempfile('omXXXXX', SUFFIX => '.rsp', UNLINK => 1 );

$CompilerArguments = "$Flags $Defines /out:$TargetFile $Source $Icon";

$Include = "/lib:" . $ProjectVPath->getString("\"","\",") . $VPath->getString("\"","\",");
$IncludeNL = "/lib:" . $ProjectVPath->getString("\"","\",\n") . $VPath->getString("\"","\",\n");

$StepDescription   = "Performing C# Compile for $TargetFile";
omlogger("Begin",$StepDescription,"ERROR:","$StepDescription succeeded.",$Compiler,$CompilerArguments,$IncludeNL,$RC,@CompilerOut);

print $tmpfh "$Include $CompilerArguments ";

foreach $Resource (@ResList)
{
 $Res       = Openmake::File->new($Resource);
 $TargetRes = $IntDir->getAbsolute . "\\$TargetName." . $Res->getF . ".resources";
 print $tmpfh "/resource:\"$TargetRes\" ";
 
 push(@CompilerOut,`resgen $Resource \"$TargetRes\" 2>&1`);
}

foreach $Reference (@RefList)
{
 print $tmpfh "/reference:$Reference ";
} 
close $tmpfh;

@cscout = `$Compiler \@$rsp 2>&1`;
print "@cscout\n";
$RC = $?;

push(@CompilerOut,@cscout);

omlogger("Final",$StepDescription,"ERROR:","ERROR: $StepDescription failed!",$Compiler,$CompilerArguments,$IncludeNL,$RC,@CompilerOut), $RC = 1 if ($RC != 0);
omlogger("Final",$StepDescription,"ERROR:","$StepDescription succeeded.",$Compiler,$CompilerArguments,$IncludeNL,$RC,@CompilerOut) if ($RC == 0);

