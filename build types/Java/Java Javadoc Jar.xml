<?xml version="1.0"?>
<BuildType><Version>6.3</Version><OperatingSystem>Java</OperatingSystem><Name>Java Javadoc Jar</Name><TaskType></TaskType><Description>Used to create documentation using the javadoc program.  Generates an index.hml file.  This file's timestamp is compared against Java and Classpath dependencies' timestamps in incremental builds. Because a standard file name &quot;index.hml&quot; is used for all JavaDoc Targets, it is recommended that each Javadoc Target be created in a separate directory, e.g. javadoc1/index.html, javadoc2/index.html, etc.Because of the wide variation in the use of the Javadoc command, customization of the JDK Javadoc Task may be required. There will be no need to modify the Java Javadoc Build Service 

The Target Name should be index.html or &lt;subdirectory>/index.html.  Typical Tasks would be 1. Set Classpath, 2. JavaDoc.</Description><FinalTargetExt>.jar</FinalTargetExt><BuildTasks><Name>Set Classpath</Name><Description>Add dependencies to the Set Classpath Build Task that need to be included in the class path prior to compilation.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type></OptionGroups></BuildTasks><BuildTasks><Name>Compile Javadoc</Name><Description>Calls the javadoc program to create java documentation.  This step results in an  index.hml file.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type><Options><Flag>-use</Flag><Type>88</Type><Description></Description></Options><Options><Flag>-splitindex</Flag><Type>88</Type><Description></Description></Options><Options><Flag>-linksource</Flag><Type>88</Type><Description></Description></Options><Options><Flag>-private</Flag><Type>88</Type><Description></Description></Options><Options><Flag>-serialwarn</Flag><Type>88</Type><Description></Description></Options><Options><Flag>-doctitle</Flag><Type>90</Type><Parameter></Parameter><Description></Description></Options><Options><Flag>-header</Flag><Type>90</Type><Description></Description></Options><Options><Flag>-footer</Flag><Type>90</Type><Description></Description></Options><Options><Flag>-locale</Flag><Type>90</Type><Description></Description></Options><Options><Flag>-charset</Flag><Type>90</Type><Description></Description></Options><Options><Flag>-breakiterator</Flag><Type>90</Type><Description></Description></Options><Options><Flag>-subpackages</Flag><Type>90</Type><Description></Description></Options></OptionGroups></BuildTasks><BuildTasks><Name>Ant Jar</Name><Description>All dependencies added to the Ant Jar Build Task will be included in the final target .jar file.

If these dependencies are derived from a subdirectory (e.g. an IDE project directory), you should set the basedir Option Parameter to that subdirectory.

Ant uses the manifest Option to determine the file that will be the manifest.mf file. This file is renamed to &quot;manifest.mf&quot; within the .jar file.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type><Options><Flag>basedir=</Flag><Type>90</Type><Description>Indicates the directory from which to jar the files. If it is not used, the files will be jarred directly from the build directory.</Description></Options><Options><Flag>compress=</Flag><Type>74</Type><Parameter>true</Parameter><Description>If true, compress the JAR file. Defaults to true.</Description></Options><Options><Flag>update=</Flag><Type>91</Type><Parameter>true</Parameter><Description></Description></Options></OptionGroups><OptionGroups><GroupName>Meta-Inf</GroupName><Type>1</Type><Description>The dependencies added to this Option Group will be placed in the META-INF directory in the final target .war file.

If these dependencies are derived from a subdirectory (e.g. an IDE project directory), you should set the dir Option Parameter to that subdirectory.</Description><Options><Flag>dir=</Flag><Type>90</Type><Description>Indicates the directory where the dependencies need to be pulled from. If it is not used, the dependencies will be pulled directly from the build directory.</Description></Options><Options><Flag>prefix=</Flag><Type>95</Type><Parameter>META-INF</Parameter><Description>Ant attribute used to push target the WEB-INF directory in the .war file.</Description></Options></OptionGroups></BuildTasks><Rules><ParentBuildTask>Set Classpath</ParentBuildTask><TargetExt>.classpath</TargetExt><SourceExts>.zip .jar .properties</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Set Classpath.sc</CompilerName><Makefile>Java</Makefile><ToDir>Final Target</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules><Rules><ParentBuildTask>Compile Javadoc</ParentBuildTask><TargetExt>.jup</TargetExt><SourceExts>.class .txt .zip .classpath .java</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Javadoc.sc</CompilerName><Makefile>Java</Makefile><ToDir>Final Target</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules><Rules><ParentBuildTask>Ant Jar</ParentBuildTask><TargetExt>.jar</TargetExt><SourceExts>.html .jup</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Ant Jar Task.sc</CompilerName><Makefile>Java</Makefile><ToDir>Final Target</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules></BuildType>
