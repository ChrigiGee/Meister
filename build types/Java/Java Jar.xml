<?xml version="1.0" encoding="UTF-8"?>
<BuildType><Version>6.3</Version><OperatingSystem>Java</OperatingSystem><Name>Java Jar</Name><TaskType></TaskType><Description>Builds a .jar file. It uses the Set Classpath, Ant Javac and Ant Jar Build Tasks to compile and package up all of the dependencies that need to be included in the final target .jar file.</Description><FinalTargetExt>.jar</FinalTargetExt><BuildTasks><Name>Set Classpath</Name><Description>Add dependencies to the Set Classpath Build Task that need to be included in the class path prior to compilation.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type></OptionGroups></BuildTasks><BuildTasks><Name>Ant Javac</Name><Description>Uses the Ant &quot;javac&quot; task to compile Java source code files. All dependencies added to this Build Task will be compiled using the compiler specified in the &quot;compiler&quot; Option parameter. If you want  to place the compiled files in a subdirectory of the build location, use the &quot;destdir&quot; Option parameter.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type><Options><Flag>compiler=</Flag><Type>91</Type><Parameter>modern</Parameter><Description>Valid parameters are: modern, classic, jikes, gcj, sj, javac1.2, javac1.3 and javac1.4</Description></Options><Options><Flag>debug=</Flag><Type>82</Type><Parameter>true</Parameter><Description>If true, compile source with debug information.</Description></Options><Options><Flag>destdir=</Flag><Type>90</Type><Parameter></Parameter><Description>Indicates the directory, relative to the build directory, where the class files should be stored. If it is not used, the class files will be stored in the build directory.</Description></Options></OptionGroups></BuildTasks><BuildTasks><Name>Ant Jar</Name><Description>All dependencies added to the Ant Jar Build Task will be included in the final target .jar file. If these dependencies are derived from a subdirectory (e.g. an IDE project directory), you should set the basedir Option Parameter to that subdirectory. Ant uses the manifest Option to determine the file that will be the manifest.mf file. This file is renamed to &quot;manifest.mf&quot; within the .jar file.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type><Options><Flag>basedir=</Flag><Type>90</Type><Description>Indicates the directory from which to jar the files. If it is not used, the files will be jarred directly from the build directory.</Description></Options><Options><Flag>compress=</Flag><Type>90</Type><Parameter>true</Parameter><Description>If true, compress the JAR file. Defaults to true.</Description></Options><Options><Flag>manifest=</Flag><Type>90</Type><Description>The name of an existing manifest file to place in the JAR file. If not specified, Ant creates a manifest file indicating the version of Ant used.</Description></Options></OptionGroups><OptionGroups><GroupName>Compiled Classes</GroupName><Type>1</Type><Description>The dependencies added to this Option Group will be placed in the directory specified by the prefix Option. If no prefix Option is set, the dependencies will be placed at the root level of the .jar file. If these dependencies are derived from a subdirectory (e.g. an IDE project directory), you should set the dir Option Parameter to that subdirectory.</Description><Options><Flag>dir=</Flag><Type>90</Type><Description>Indicates the directory where the class files need to be pulled from. If it is not used, the classes will be pulled directly from the build directory.</Description></Options><Options><Flag>prefix=</Flag><Type>90</Type><Parameter></Parameter><Description>Ant attribute used to target a specified directory in the jar file.</Description></Options></OptionGroups><OptionGroups><GroupName>Meta-Inf</GroupName><Type>1</Type><Description>The dependencies added to this Option Group will be placed in the META-INF directory in the final target .war file. If these dependencies are derived from a subdirectory (e.g. an IDE project directory), you should set the dir Option Parameter to that subdirectory.</Description><Options><Flag>dir=</Flag><Type>90</Type><Description>Indicates the directory where the dependencies need to be pulled from. If it is not used, the dependencies will be pulled directly from the build directory.</Description></Options><Options><Flag>prefix=</Flag><Type>95</Type><Parameter>META-INF</Parameter><Description>Ant attribute used to push target the WEB-INF directory in the .war file.</Description></Options></OptionGroups></BuildTasks><Rules><ParentBuildTask>Set Classpath</ParentBuildTask><TargetExt>.classpath</TargetExt><SourceExts>.zip .jar .properties</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Set Classpath.sc</CompilerName><Makefile>Java</Makefile><ToDir>Final Target</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules><Rules><ParentBuildTask>Ant Javac</ParentBuildTask><TargetExt>.javac</TargetExt><SourceExts>.java .jar .class .classpath .wsdljava .copypkg .javac .soap .sqljava .omidl .properties</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Ant Javac Task.sc</CompilerName><Makefile>Java</Makefile><ToDir>Intermediate</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules><Rules><ParentBuildTask>Ant Jar</ParentBuildTask><TargetExt>.jar</TargetExt><SourceExts>.class .css .javac .rmic .* .jsp .policy .gif .htm .html .jpg .jpeg .jar .jsp .ser .xml .xmi .mapxmi .tblxmi .schxmi .dbxmi .properties .mf .MF .java .theme .au .DAT .tgtdeps .idl .ini .jor .jup .noext .packages .png .tld</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Ant Jar Task.sc</CompilerName><Makefile>Java</Makefile><ToDir>Final Target</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules></BuildType>
