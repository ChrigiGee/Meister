<?xml version="1.0"?>
<BuildType><Version>6.3</Version><OperatingSystem>Java</OperatingSystem><Name>Java Ear</Name><TaskType>Master</TaskType><Description>Builds an .ear file. It uses the Set Classpath, Ant Javac and Ant Ear Build Tasks to compile and package up all of the dependencies that need to be included in the final target .ear file. Note that there may be no dependencies in the &quot;Set Classpath&quot; and &quot;Ant Javac&quot; Build Tasks if there is no .java source to compile for the .ear file. All of the directory structure requirements of a .ear file are built into the Build Service.</Description><FinalTargetExt>.ear</FinalTargetExt><BuildTasks><Name>Set Classpath</Name><Description>Add dependencies to the Set Classpath Build Task that need to be included in the class path prior to compilation.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type></OptionGroups></BuildTasks><BuildTasks><Name>Ant Javac</Name><Description>Uses the Ant &quot;javac&quot; task to compile Java source code files. All dependencies added to this Build Task will be compiled using the compiler specified in the &quot;compiler&quot; Option parameter.

If you want  to place the compiled files in a subdirectory of the build location, use the &quot;destdir&quot; Option parameter.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type><Options><Flag>compiler=</Flag><Type>91</Type><Parameter>modern</Parameter><Description>Valid parameters are: modern, classic, jikes, gcj, sj, javac1.2, javac1.3 and javac1.4</Description></Options><Options><Flag>debug=</Flag><Type>82</Type><Parameter>true</Parameter><Description>If true, compile source with debug information.</Description></Options><Options><Flag>destdir=</Flag><Type>90</Type><Parameter></Parameter><Description>Indicates the directory, relative to the build directory, where the class files should be stored. If it is not used, the class files will be stored in the build directory.</Description></Options></OptionGroups></BuildTasks><BuildTasks><Name>Ant Ear</Name><Description>All dependencies added to the Java Ear build task will be packaged up in the final target .ear file.

If these dependencies are derived from a subdirectory (e.g. an IDE project directory), you should set the basedir Option Parameter to that subdirectory.

Ant uses the appxml Option to determine the file that will be the application.xml file. This file is renamed to &quot;application.xml&quot; within the .ear file.

Ant uses the manifest Option to determine the file that will be the manifest.mf file. This file is renamed to &quot;manifest.mf&quot; within the .ear file.</Description><OptionGroups><GroupName>Build Task Options</GroupName><Type>1</Type><Options><Flag>basedir=</Flag><Type>90</Type><Description>Indicates the directory from which to jar the files. If it is not used, the files will be jarred directly from the build directory.</Description></Options><Options><Flag>compress=</Flag><Type>90</Type><Parameter>true</Parameter><Description>If true, compresses the final target .ear file. Defaults to true.</Description></Options><Options><Flag>appxml=</Flag><Type>91</Type><Parameter></Parameter><Description>Specifies the deployment descriptor. The deployment descriptor will be renamed by Ant to application.xml and be placed in the META-INF directory.</Description></Options><Options><Flag>manifest=</Flag><Type>90</Type><Parameter></Parameter><Description>The name of the manifest file to use.</Description></Options></OptionGroups><OptionGroups><GroupName>Meta-Inf</GroupName><Type>1</Type><Description>The dependencies added to this Option Group will be placed in the META-INF directory in the final target .ear file.

If these dependencies are derived from a subdirectory (e.g. an IDE project directory), you should set the dir Option Parameter to that subdirectory.</Description><Options><Flag>dir=</Flag><Type>90</Type><Description>Indicates the directory from which to pull the META-INF files. If it is not used, the META-INF files will be pulled directly from the build directory.</Description></Options><Options><Flag>prefix=</Flag><Type>95</Type><Parameter>META-INF</Parameter><Description>Ant attribute used to push target the WEB-INF directory in the .war file.</Description></Options></OptionGroups></BuildTasks><Rules><ParentBuildTask>Set Classpath</ParentBuildTask><TargetExt>.classpath</TargetExt><SourceExts>.zip .jar .properties .appxml .xml .webxml .manifest=</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Set Classpath.sc</CompilerName><Makefile>Java</Makefile><ToDir>Final Target</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules><Rules><ParentBuildTask>Ant Javac</ParentBuildTask><TargetExt>.javac</TargetExt><SourceExts>.java .jar .classpath .class .wsdljava .copypkg .javac .sqljava .properties .soap .rmi .iiop .ibm .java: .:class .Connection .xml .appxml .webxml .manifest=</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Ant Javac Task.sc</CompilerName><Makefile>Java</Makefile><ToDir>Intermediate</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules><Rules><ParentBuildTask>Ant Ear</ParentBuildTask><TargetExt>.ear</TargetExt><SourceExts>.au .DAT .gif .htm .html .tgtdeps .html .idl .ini .jar .java .jor .jpeg .jpg .jsp .jup .mf .MF .mif .noext .packages .policy .properties .props .rmi .zip .class .ttf .javac .javadoc .chgpkg .soap .war .xmi .mapxmi .dbxmi .tblxmi .schxmi .xml .classpath .rmi .iiop .ibm .java: .Connection .webxml .appxml .manifest=</SourceExts><NameFrom>Final Target</NameFrom><CompilerName>Ant Ear Task.sc</CompilerName><Makefile>Java</Makefile><ToDir>Final Target</ToDir><OptionGroup><GroupName>Rule Options</GroupName><Type>2</Type></OptionGroup></Rules></BuildType>
